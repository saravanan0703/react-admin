{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-scale/src/quantile.js","../node_modules/@vx/pattern/esm/patterns/Pattern.js","../node_modules/@vx/pattern/esm/constants/index.js","../node_modules/@vx/pattern/esm/patterns/Lines.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js"],"names":["a","b","NaN","initRange","domain","range","arguments","length","this","numbers","values","valueof","undefined","value","f","index","x","e10","Math","sqrt","e5","e2","tickIncrement","start","stop","count","step","max","power","floor","log","LN10","error","pow","i","n","min","c","slice","t","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","Array","d","Date","setTime","k","constant","number","color","rgb","string","date","numberArray","isArray","valueOf","toString","isNaN","object","round","unit","identity","normalize","bimap","interpolate","d0","d1","r0","r1","polymap","j","r","reverse","bisect","copy","source","target","clamp","unknown","transformer","transform","untransform","piecewise","output","input","interpolateValue","rescale","clamper","scale","map","invert","y","interpolateNumber","_","from","rangeRound","interpolateRound","u","continuous","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","trim","type","prototype","formatDecimalParts","p","toExponential","indexOf","coefficient","prefixExponent","locale","format","formatPrefix","abs","exponent","join","toFixed","toLocaleString","replace","toPrecision","formatRounded","toUpperCase","prefixes","grouping","thousands","group","call","Number","g","push","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","s","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","e","formatLocale","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","linearish","ticks","isFinite","nice","prestep","maxIter","ceil","linear","apply","quantize","x0","x1","invertExtent","thresholds","EOL","EOF","objectConverter","columns","Function","name","JSON","stringify","inferColumns","rows","columnSet","Object","create","forEach","row","column","pad","formatDate","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","parseRows","text","N","I","eof","eol","token","preformatBody","formatValue","formatRow","parse","convert","customConverter","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","init","fetch","then","dsvParse","quantileSorted","value0","value1","quantile","threshold","sort","ascending","quantiles","Pattern","_ref","id","height","children","React","createElement","patternUnits","propTypes","_pt","isRequired","node","PatternOrientation","pathForOrientation","orientation","Lines","_ref2","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","cx","o","key","oneOfType","oneOf","array","delta","compare","left","lo","hi","mid","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight"],"mappings":"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","file":"static/js/10.c1188c48.chunk.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import _pt from \"prop-types\";\nimport React from 'react';\nexport default function Pattern(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"pattern\", {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: \"userSpaceOnUse\"\n  }, children));\n}\nPattern.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  children: _pt.node.isRequired\n};","export var PatternOrientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n  diagonal: 'diagonal',\n  diagonalRightToLeft: 'diagonalRightToLeft'\n};","import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n"],"sourceRoot":""}