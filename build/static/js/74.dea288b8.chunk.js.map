{"version":3,"sources":["views/app-views/maps/simple-map/markdown/index.md","views/app-views/maps/simple-map/markdown/BasicAnnotation.md","views/app-views/maps/simple-map/markdown/BasicMarker.md","views/app-views/maps/simple-map/markdown/BasicWorldMap.md","views/app-views/maps/simple-map/markdown/CustomMarker.md","views/app-views/maps/simple-map/markdown/EuropeMapWithGraticule.md","views/app-views/maps/simple-map/markdown/Graticule.md","views/app-views/maps/simple-map/markdown/MapChartWithTexture.md","views/app-views/maps/simple-map/markdown/MapChartWithTooltip.md","views/app-views/maps/simple-map/markdown/ChoroplethMapQuantile.md","views/app-views/maps/simple-map/markdown/ChoroplethMapQuantize.md","views/app-views/maps/simple-map/markdown/StateMap.md","views/app-views/maps/simple-map/markdown/ChoroplethMap.md","views/app-views/maps/simple-map/markdown/ZoomingAndPannning.md","views/app-views/maps/simple-map/BasicAnnotation.js","views/app-views/maps/simple-map/BasicMarker.js","views/app-views/maps/simple-map/BasicWorldMap.js","views/app-views/maps/simple-map/CustomMarker.js","views/app-views/maps/simple-map/EuropeMapWithGraticule.js","views/app-views/maps/simple-map/Graticule.js","views/app-views/maps/simple-map/MapChartWithTexture.js","views/app-views/maps/simple-map/MapChartWithTooltip.js","views/app-views/maps/simple-map/ChoroplethMapQuantile.js","views/app-views/maps/simple-map/ChoroplethMapQuantize.js","views/app-views/maps/simple-map/StateMap.js","views/app-views/maps/simple-map/ChoroplethMap.js","views/app-views/maps/simple-map/ZoomingAndPannning.js","views/app-views/maps/simple-map/index.js"],"names":["BasicAnnotation","projection","height","projectionConfig","rotate","scale","geography","fill","stroke","strokeWidth","geographies","map","geo","rsmKey","subject","dx","dy","connectorProps","strokeLinecap","x","textAnchor","alignmentBaseline","Component","markers","markerOffset","name","coordinates","BasicMarker","filter","d","properties","REGION_UN","r","y","style","fontFamily","BasicWorldMap","CustomMarker","strokeLinejoin","transform","cx","cy","EuropeMapWithGraticule","GraticuleMap","highlighted","generateCircle","deg","Array","i","MapChartWithTexture","id","width","background","orientation","isHighlighted","indexOf","ISO_A3","onClick","console","log","strokeDasharray","MapChart","setTooltipContent","onMouseEnter","num","NAME","POP_EST","Math","round","onMouseLeave","default","outline","hover","pressed","Map","useState","content","setContent","MapChartWithTooltip","data","setData","useEffect","csv","then","counties","colorScale","scaleQuantile","domain","unemployment_rate","range","cur","find","s","scaleQuantize","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","centroid","geoCentroid","allStates","val","Object","keys","fontSize","scaleLinear","length","ISO3","zoom","SimpleMap","Fragment","DemoCard","code","BasicAnnotationMd","BasicMarkerMd","BasicWorldMapMd","CustomMarkerMd","EuropeMapWithGraticuleMd","GraticuleMd","MapChartWithTextureMd","MapChartWithTooltipMd","ChoroplethMapQuantileMd","ChoroplethMapQuantizeMd","StateMapMd","ChoroplethMapMd","ZoomingAndPannningMd","ApiContainer","IndexMd"],"mappings":"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","file":"static/js/74.dea288b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/index.8ca14d52.md\";","export default __webpack_public_path__ + \"static/media/BasicAnnotation.4a7cf0ed.md\";","export default __webpack_public_path__ + \"static/media/BasicMarker.1b459b78.md\";","export default __webpack_public_path__ + \"static/media/BasicWorldMap.33921451.md\";","export default __webpack_public_path__ + \"static/media/CustomMarker.087c1c79.md\";","export default __webpack_public_path__ + \"static/media/EuropeMapWithGraticule.038d61d5.md\";","export default __webpack_public_path__ + \"static/media/Graticule.bf3bfbb4.md\";","export default __webpack_public_path__ + \"static/media/MapChartWithTexture.38efe432.md\";","export default __webpack_public_path__ + \"static/media/MapChartWithTooltip.ad520087.md\";","export default __webpack_public_path__ + \"static/media/ChoroplethMapQuantile.ff2acc0e.md\";","export default __webpack_public_path__ + \"static/media/ChoroplethMapQuantize.dee2bd16.md\";","export default __webpack_public_path__ + \"static/media/StateMap.4c49ef6e.md\";","export default __webpack_public_path__ + \"static/media/ChoroplethMap.14ed61d5.md\";","export default __webpack_public_path__ + \"static/media/ZoomingAndPannning.696d6218.md\";","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Annotation\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nexport class BasicAnnotation extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap\r\n\t\t\t\tprojection=\"geoAzimuthalEqualArea\"\r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\trotate: [-20.0, -52.0, 0],\r\n\t\t\t\t\tscale: 700\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Geographies\r\n\t\t\t\t\tgeography={geoUrl}\r\n\t\t\t\t\tfill=\"#D6D6DA\"\r\n\t\t\t\t\tstroke=\"#FFFFFF\"\r\n\t\t\t\t\tstrokeWidth={0.5}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t\t<Annotation\r\n\t\t\t\t\tsubject={[2.3522, 48.8566]}\r\n\t\t\t\t\tdx={-90}\r\n\t\t\t\t\tdy={-30}\r\n\t\t\t\t\tconnectorProps={{\r\n\t\t\t\t\t\tstroke: \"#FF5533\",\r\n\t\t\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\t\t\tstrokeLinecap: \"round\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<text x=\"-8\" textAnchor=\"end\" alignmentBaseline=\"middle\" fill=\"#F53\">\r\n\t\t\t\t\t\t{\"Paris\"}\r\n\t\t\t\t\t</text>\r\n\t\t\t\t</Annotation>\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BasicAnnotation\r\n","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst markers = [\r\n  { markerOffset: -15, name: \"Buenos Aires\", coordinates: [-58.3816, -34.6037] },\r\n  { markerOffset: -15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\r\n  { markerOffset: 25, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\r\n  { markerOffset: 25, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\r\n  { markerOffset: 25, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\r\n  { markerOffset: 25, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\r\n  { markerOffset: -15, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\r\n  { markerOffset: -15, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\r\n  { markerOffset: 25, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\r\n  { markerOffset: 25, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\r\n  { markerOffset: -15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\r\n  { markerOffset: -15, name: \"Lima\", coordinates: [-77.0428, -12.0464] }\r\n];\r\n\r\nexport class BasicMarker extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap\r\n\t\t\t\tprojection=\"geoAzimuthalEqualArea\"\r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\trotate: [58, 20, 0],\r\n\t\t\t\t\tscale: 250\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies\r\n\t\t\t\t\t\t\t.filter(d => d.properties.REGION_UN === \"Americas\")\r\n\t\t\t\t\t\t\t.map(geo => (\r\n\t\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\t\tfill=\"#EAEAEC\"\r\n\t\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t\t{markers.map(({ name, coordinates, markerOffset }) => (\r\n\t\t\t\t\t<Marker key={name} coordinates={coordinates}>\r\n\t\t\t\t\t\t<circle r={5} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2} />\r\n\t\t\t\t\t\t<text\r\n\t\t\t\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\t\t\t\ty={markerOffset}\r\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t))}\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BasicMarker\r\n","import React, { Component } from 'react'\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nexport class BasicWorldMap extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap \r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\tscale: 100\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BasicWorldMap\r\n","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst markers = [\r\n  { markerOffset: 15, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\r\n  { markerOffset: 15, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\r\n  { markerOffset: 15, name: \"Lima\", coordinates: [-77.0428, -12.0464] }\r\n];\r\n\r\nexport class CustomMarker extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap\r\n\t\t\t\tprojection=\"geoAzimuthalEqualArea\"\r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\trotate: [58, 20, 0],\r\n\t\t\t\t\tscale: 150\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies\r\n\t\t\t\t\t\t\t.filter(d => d.properties.REGION_UN === \"Americas\")\r\n\t\t\t\t\t\t\t.map(geo => (\r\n\t\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\t\tfill=\"#EAEAEC\"\r\n\t\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t\t{markers.map(({ name, coordinates, markerOffset }) => (\r\n\t\t\t\t\t<Marker key={name} coordinates={coordinates}>\r\n\t\t\t\t\t\t<g\r\n\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\tstroke=\"#FF5533\"\r\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\t\ttransform=\"translate(-12, -24)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n\t\t\t\t\t\t\t<path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t<text\r\n\t\t\t\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\t\t\t\ty={markerOffset}\r\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t))}\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CustomMarker\r\n","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nexport class EuropeMapWithGraticule extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap\r\n\t\t\t\tprojection=\"geoAzimuthalEqualArea\"\r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\trotate: [-20.0, -52.0, 0],\r\n\t\t\t\t\tscale: 300\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Graticule stroke=\"#EAEAEC\" />\r\n\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tfill=\"#9998A3\"\r\n\t\t\t\t\t\t\t\tstroke=\"#EAEAEC\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EuropeMapWithGraticule\r\n","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nexport class GraticuleMap extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap projectionConfig={{ scale: 80 }} height={200}>\r\n\t\t\t\t<Graticule stroke=\"#F53\" />\r\n\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default GraticuleMap\r\n","import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  Line,\r\n  Sphere\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n// https://www.worldatlas.com/articles/top-coffee-producing-countries.html\r\nconst highlighted = [\r\n  \"BRA\",\r\n  \"VNM\",\r\n  \"COL\",\r\n  \"IDN\",\r\n  \"ETH\",\r\n  \"HND\",\r\n  \"IND\",\r\n  \"UGA\",\r\n  \"MEX\",\r\n  \"GTM\",\r\n  \"PER\",\r\n  \"NIC\",\r\n  \"CHN\",\r\n  \"CIV\",\r\n  \"CRI\",\r\n  \"KEN\",\r\n  \"PNG\",\r\n  \"TZA\",\r\n  \"SLV\",\r\n  \"ECU\",\r\n  \"CMR\",\r\n  \"LAO\",\r\n  \"MDG\",\r\n  \"GAB\",\r\n  \"THA\",\r\n  \"VEN\",\r\n  \"DOM\",\r\n  \"HTI\",\r\n  \"COD\",\r\n  \"RWA\",\r\n  \"BDI\",\r\n  \"PHL\",\r\n  \"TGO\",\r\n  \"GIN\",\r\n  \"YEM\",\r\n  \"CUB\",\r\n  \"PAN\",\r\n  \"BOL\",\r\n  \"TLS\",\r\n  \"CAF\",\r\n  \"NGA\",\r\n  \"GHA\",\r\n  \"SLE\",\r\n  \"AGO\",\r\n  \"JAM\",\r\n  \"PRY\",\r\n  \"MWI\",\r\n  \"TTO\",\r\n  \"ZWE\",\r\n  \"LBR\"\r\n];\r\n\r\nfunction generateCircle(deg) {\r\n  if (!deg) return [[-180, 0], [-90, 0], [0, 0], [90, 0], [180, 0]];\r\n  return new Array(361).fill(1).map((d, i) => {\r\n    return [-180 + i, deg];\r\n  });\r\n}\r\n\r\nexport class MapChartWithTexture extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ComposableMap \r\n\t\t\t\tprojection=\"geoEqualEarth\" \r\n\t\t\t\theight={200}\r\n\t\t\t\tprojectionConfig={{\r\n\t\t\t\t\tscale: 80\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<PatternLines\r\n\t\t\t\t\tid=\"lines\"\r\n\t\t\t\t\theight={6}\r\n\t\t\t\t\twidth={6}\r\n\t\t\t\t\tstroke=\"#776865\"\r\n\t\t\t\t\tstrokeWidth={1}\r\n\t\t\t\t\tbackground=\"#F6F0E9\"\r\n\t\t\t\t\torientation={[\"diagonal\"]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Sphere stroke=\"#DDD\" />\r\n\t\t\t\t<Graticule stroke=\"#DDD\" />\r\n\t\t\t\t<Geographies geography={geoUrl} stroke=\"#FFF\" strokeWidth={0.5}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\t\tconst isHighlighted =\r\n\t\t\t\t\t\t\t\thighlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\t\tfill={isHighlighted ? \"url('#lines')\" : \"#F6F0E9\"}\r\n\t\t\t\t\t\t\t\t\tonClick={() => console.log(geo.properties.ISO_A3)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t\t\t<Line coordinates={generateCircle(0)} stroke=\"#F53\" strokeWidth={2} />\r\n\t\t\t\t<Line\r\n\t\t\t\t\tcoordinates={generateCircle(23)}\r\n\t\t\t\t\tstroke=\"#776865\"\r\n\t\t\t\t\tstrokeWidth={1}\r\n\t\t\t\t\tstrokeDasharray={[5, 5]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Line\r\n\t\t\t\t\tcoordinates={generateCircle(-24)}\r\n\t\t\t\t\tstroke=\"#776865\"\r\n\t\t\t\t\tstrokeWidth={1}\r\n\t\t\t\t\tstrokeDasharray={[5, 5]}\r\n\t\t\t\t/>\r\n\t\t\t</ComposableMap>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MapChartWithTexture\r\n","import React, { Component, useState } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst rounded = num => {\r\n  if (num > 1000000000) {\r\n    return Math.round(num / 100000000) / 10 + \"Bn\";\r\n  } else if (num > 1000000) {\r\n    return Math.round(num / 100000) / 10 + \"M\";\r\n  } else {\r\n    return Math.round(num / 100) / 10 + \"K\";\r\n  }\r\n};\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n  return (\r\n\t\t<ComposableMap data-tip=\"\" height={200} projectionConfig={{ scale: 80 }}>\r\n\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tconst { NAME, POP_EST } = geo.properties;\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#D6D6DA\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#F53\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tpressed: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#E42\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n  );\r\n};\r\n\r\nfunction Map() {\r\n  const [content, setContent] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <MapChart setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport class MapChartWithTooltip extends Component {\r\n\trender() {\r\n\t\treturn (\r\n      <Map />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MapChartWithTooltip\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleQuantile } from \"d3-scale\";\r\nimport { csv } from \"d3-fetch\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // https://www.bls.gov/lau/\r\n    csv(\"/data/unemployment-by-county-2017.csv\").then(counties => {\r\n      setData(counties);\r\n    });\r\n  }, []);\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map(d => d.unemployment_rate))\r\n    .range([\r\n      \"#ffedea\",\r\n      \"#ffcec5\",\r\n      \"#ffad9f\",\r\n      \"#ff8a75\",\r\n      \"#ff5533\",\r\n      \"#e2492d\",\r\n      \"#be3d26\",\r\n      \"#9a311f\",\r\n      \"#782618\"\r\n    ]);\r\n\r\n  return (\r\n    <ComposableMap height={200} projectionConfig={{ scale: 450 }} projection=\"geoAlbersUsa\">\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) =>\r\n          geographies.map(geo => {\r\n            const cur = data.find(s => s.id === geo.id);\r\n            return (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                fill={cur ? colorScale(cur.unemployment_rate) : \"#EEE\"}\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;","import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleQuantize } from \"d3-scale\";\r\nimport { csv } from \"d3-fetch\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\r\n\r\nconst colorScale = scaleQuantize()\r\n  .domain([1, 10])\r\n  .range([\r\n    \"#ffedea\",\r\n    \"#ffcec5\",\r\n    \"#ffad9f\",\r\n    \"#ff8a75\",\r\n    \"#ff5533\",\r\n    \"#e2492d\",\r\n    \"#be3d26\",\r\n    \"#9a311f\",\r\n    \"#782618\"\r\n  ]);\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // https://www.bls.gov/lau/\r\n    csv(\"/data/unemployment-by-county-2017.csv\").then(counties => {\r\n      setData(counties);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap height={200} projectionConfig={{ scale: 450 }} projection=\"geoAlbersUsa\">\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const cur = data.find(s => s.id === geo.id);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={colorScale(cur ? cur.unemployment_rate : \"#EEE\")}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React from \"react\";\r\nimport { geoCentroid } from \"d3-geo\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Annotation\r\n} from \"react-simple-maps\";\r\n\r\nimport allStates from \"assets/data/allstates.json\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21]\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap height={200} projectionConfig={{ scale: 450 }} projection=\"geoAlbersUsa\">\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) => (\r\n          <>\r\n            {geographies.map(geo => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke=\"#FFF\"\r\n                geography={geo}\r\n                fill=\"#DDD\"\r\n              />\r\n            ))}\r\n            {geographies.map(geo => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find(s => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + \"-name\"}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y=\"2\" fontSize={7} textAnchor=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={7} alignmentBaseline=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0.29, 0.68])\r\n  .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    csv(`/data/vulnerability.csv`).then(data => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ComposableMap\r\n\t\t\theight={200}\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 80\r\n      }}\r\n    >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <div>\r\n      <ComposableMap height={200} projectionConfig={{ scale: 80 }}>\r\n        <ZoomableGroup zoom={1}>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography key={geo.rsmKey} geography={geo} />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React, { Component } from 'react'\r\nimport DemoCard from 'components/util-components/DemoCard';\r\nimport ApiContainer from 'components/util-components/ApiContainer';\r\nimport IndexMd from './markdown/index.md';\r\nimport BasicAnnotationMd from './markdown/BasicAnnotation.md';\r\nimport BasicMarkerMd from './markdown/BasicMarker.md';\r\nimport BasicWorldMapMd from './markdown/BasicWorldMap.md';\r\nimport CustomMarkerMd from './markdown/CustomMarker.md';\r\nimport EuropeMapWithGraticuleMd from './markdown/EuropeMapWithGraticule.md';\r\nimport GraticuleMd from './markdown/Graticule.md';\r\nimport MapChartWithTextureMd from './markdown/MapChartWithTexture.md';\r\nimport MapChartWithTooltipMd from './markdown/MapChartWithTooltip.md';\r\nimport ChoroplethMapQuantileMd from './markdown/ChoroplethMapQuantile.md';\r\nimport ChoroplethMapQuantizeMd from \"./markdown/ChoroplethMapQuantize.md\";\r\nimport StateMapMd from './markdown/StateMap.md';\r\nimport ChoroplethMapMd from './markdown/ChoroplethMap.md';\r\nimport ZoomingAndPannningMd from './markdown/ZoomingAndPannning.md';\r\nimport BasicAnnotation from './BasicAnnotation';\r\nimport BasicMarker from './BasicMarker';\r\nimport BasicWorldMap from './BasicWorldMap';\r\nimport CustomMarker from './CustomMarker';\r\nimport EuropeMapWithGraticule from './EuropeMapWithGraticule';\r\nimport Graticule from './Graticule';\r\nimport MapChartWithTexture from './MapChartWithTexture';\r\nimport MapChartWithTooltip from './MapChartWithTooltip';\r\nimport ChoroplethMapQuantile from './ChoroplethMapQuantile';\r\nimport ChoroplethMapQuantize from \"./ChoroplethMapQuantize\";\r\nimport StateMap from './StateMap';\r\nimport ChoroplethMap from './ChoroplethMap';\r\nimport ZoomingAndPannning from './ZoomingAndPannning';\r\n\r\nexport class SimpleMap extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n        <DemoCard code={BasicAnnotationMd}><BasicAnnotation /></DemoCard>\r\n\t\t\t\t<DemoCard code={BasicMarkerMd}><BasicMarker /></DemoCard>\r\n\t\t\t\t<DemoCard code={BasicWorldMapMd}><BasicWorldMap /></DemoCard>\r\n\t\t\t\t<DemoCard code={CustomMarkerMd}><CustomMarker /></DemoCard>\r\n\t\t\t\t<DemoCard code={EuropeMapWithGraticuleMd}><EuropeMapWithGraticule /></DemoCard>\r\n\t\t\t\t<DemoCard code={GraticuleMd}><Graticule /></DemoCard>\r\n\t\t\t\t<DemoCard code={MapChartWithTextureMd}><MapChartWithTexture /></DemoCard>\r\n\t\t\t\t<DemoCard code={MapChartWithTooltipMd}><MapChartWithTooltip /></DemoCard>\r\n\t\t\t\t<DemoCard code={ChoroplethMapQuantileMd}><ChoroplethMapQuantile /></DemoCard>\r\n\t\t\t\t<DemoCard code={ChoroplethMapQuantizeMd}><ChoroplethMapQuantize /></DemoCard>\r\n\t\t\t\t<DemoCard code={StateMapMd}><StateMap /></DemoCard>\r\n\t\t\t\t<DemoCard code={ChoroplethMapMd}><ChoroplethMap /></DemoCard>\r\n\t\t\t\t<DemoCard code={ZoomingAndPannningMd}><ZoomingAndPannning /></DemoCard>\r\n\t\t\t\t<ApiContainer code={IndexMd} /> \r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SimpleMap\r\n"],"sourceRoot":""}